<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.StockIncomeBillMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.StockIncomeBill">
    <id column="id" property="id" />
    <result column="sn" property="sn" />
    <result column="vdate" property="vdate" />
    <result column="status" property="status" />
    <result column="totalAmount" property="totalAmount" />
    <result column="totalNumber" property="totalNumber" />
    <result column="auditTime" property="auditTime" />
    <result column="inputTime" property="inputTime" />
    <!-- ===================================== -->
    <association property="inputUser" javaType="Employee" columnPrefix="inputUser_">
      <result column="name" property="name" />
    </association>
    <association property="auditor" javaType="Employee" columnPrefix="audit_">
      <result column="name" property="name" />
    </association>
    <association property="depot" javaType="Depot" columnPrefix="d_">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
    <!--封装当前单据的明显-->
    <collection property="items" column="id"
                select="cn.wolfcode.wms.mapper.StockIncomeBillItemMapper.selectItemsByBillId"/>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from stockIncomebill
    where id = #{id}
  </delete>
  <delete id="deleteItemsByBillId">
    delete from stockIncomeBillItem where bill_id = #{billId}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into stockIncomebill (sn, vdate, status, totalAmount, totalNumber,
      inputTime, inputUser_id, depot_id)
    values (#{sn}, #{vdate}, #{status}, #{totalAmount}, #{totalNumber},
      #{inputTime}, #{inputUser.id}, #{depot.id})
  </insert>
  <update id="updateByPrimaryKey">
    update stockIncomebill
    set sn = #{sn},
      vdate = #{vdate},
      totalAmount = #{totalAmount},
      totalNumber = #{totalNumber},
      depot_id = #{depot.id}
    where id = #{id}
  </update>
  <update id="audit" parameterType="stockIncomeBill">
    update stockIncomebill
    set
      status = #{status},
      auditor_id = #{auditor.id},
      auditTime = #{auditTime}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
  <include refid="base_column"/>
  <include refid="base_table"/>
  where bill.id = #{id}
</select>
  <select id="selectForCount" resultType="int">
    select count(*)
    <include refid="base_table"/>
    <include refid="base_where"/>
  </select>
  <select id="selectForList" resultMap="BaseResultMap">
    <include refid="base_column"/>
    <include refid="base_table"/>
    <include refid="base_where"/>
    limit #{start}, #{pageSize}
  </select>

  <sql id="base_column">
    select
      bill.id,bill.sn, bill.vdate, bill.totalNumber, bill.totalAmount, bill.status,
      d.id d_id, d.name d_name,
      inputUser.name inputUser_name,
      audit.name audit_name
  </sql>
  <sql id="base_table">
    from stockIncomeBill bill
    join employee inputUser on bill.inputUser_id = inputUser.id
    left join employee audit on bill.auditor_id = audit.id
    join depot d on d.id = bill.depot_id
  </sql>
  <sql id="base_where">
    <where>
      <if test="beginDate != null">
        and bill.vdate &gt;= #{beginDate}
      </if>
      <if test="endDate != null">
        and bill.vdate &lt;= #{endDate}
      </if>
      <if test="depotId > 0">
        and bill.depot_id = #{depotId}
      </if>
      <if test="status > 0">
        and bill.status = #{status}
      </if>
    </where>
  </sql>
</mapper>